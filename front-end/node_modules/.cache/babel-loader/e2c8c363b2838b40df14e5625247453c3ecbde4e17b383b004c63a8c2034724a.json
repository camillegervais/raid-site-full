{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\Documents\\\\training\\\\src\\\\component\\\\Inter.js\",\n  _s = $RefreshSig$();\nimport react from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Inter.css\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inter(props) {\n  _s();\n  const background = document.getElementsByClassName(\"main\");\n  useEffect(() => {\n    // Code to run when the 'activated' value changes\n    if (props.activated) {\n      background[0].style.backgroundColor = \"blueviolet\";\n    } else {\n      background[0].style.backgroundColor = \"black\";\n    }\n  }, [props.activated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"circle\",\n      onClick: () => props.setActivated(!props.activated),\n      animate: {\n        x: props.activated ? 0 : 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Inter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Inter;\nexport default Inter;\nvar _c;\n$RefreshReg$(_c, \"Inter\");","map":{"version":3,"names":["react","useState","useEffect","motion","jsxDEV","_jsxDEV","Inter","props","_s","background","document","getElementsByClassName","activated","style","backgroundColor","className","children","div","onClick","setActivated","animate","x","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/camil/Documents/training/src/component/Inter.js"],"sourcesContent":["import react from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./Inter.css\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction Inter(props){\r\n\r\n    const background = document.getElementsByClassName(\"main\");\r\n\r\n    useEffect(() => {\r\n        // Code to run when the 'activated' value changes\r\n        if(props.activated){\r\n            background[0].style.backgroundColor = \"blueviolet\";\r\n        } else {\r\n            background[0].style.backgroundColor = \"black\";\r\n        }\r\n    }, [props.activated]);\r\n\r\n    return(\r\n        <div className=\"main\">\r\n            <motion.div className=\"circle\" onClick={() => props.setActivated(!props.activated)} animate={{x: props.activated ? 0 : 200}}></motion.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inter;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,aAAa;AACpB,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,KAAKA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAEjB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,MAAM,CAAC;EAE1DT,SAAS,CAAC,MAAM;IACZ;IACA,IAAGK,KAAK,CAACK,SAAS,EAAC;MACfH,UAAU,CAAC,CAAC,CAAC,CAACI,KAAK,CAACC,eAAe,GAAG,YAAY;IACtD,CAAC,MAAM;MACHL,UAAU,CAAC,CAAC,CAAC,CAACI,KAAK,CAACC,eAAe,GAAG,OAAO;IACjD;EACJ,CAAC,EAAE,CAACP,KAAK,CAACK,SAAS,CAAC,CAAC;EAErB,oBACIP,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjBX,OAAA,CAACF,MAAM,CAACc,GAAG;MAACF,SAAS,EAAC,QAAQ;MAACG,OAAO,EAAEA,CAAA,KAAMX,KAAK,CAACY,YAAY,CAAC,CAACZ,KAAK,CAACK,SAAS,CAAE;MAACQ,OAAO,EAAE;QAACC,CAAC,EAAEd,KAAK,CAACK,SAAS,GAAG,CAAC,GAAG;MAAG;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzI,CAAC;AAEd;AAACjB,EAAA,CAlBQF,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAoBd,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
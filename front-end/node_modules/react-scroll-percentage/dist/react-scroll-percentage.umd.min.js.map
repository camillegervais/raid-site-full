{"version":3,"file":"react-scroll-percentage.umd.min.js","sources":["../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/.pnpm/react-intersection-observer@8.34.0_react@16.14.0/node_modules/react-intersection-observer/react-intersection-observer.m.js","../src/utils.ts","../src/ScrollPercentage.tsx","../node_modules/.pnpm/@babel+runtime@7.23.6/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../src/useScrollPercentage.tsx"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import * as React from 'react';\nimport { useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar observerMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options, fallbackInView) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (fallbackInView === void 0) {\n    fallbackInView = unsupportedValue;\n  }\n\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    var bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return function () {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap[\"delete\"](id);\n    }\n  };\n}\n\nvar _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay,\n        fallbackInView = _this$props.fallbackInView;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    }, fallbackInView);\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        props = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    return /*#__PURE__*/React.createElement(as || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(React.Component);\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView,\n      fallbackInView = _ref.fallbackInView;\n\n  var unobserve = React.useRef();\n\n  var _React$useState = React.useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = React.useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      }, fallbackInView);\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, InView as default, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.m.js.map\n","export function calculateVerticalPercentage(\n  bounds: ClientRect,\n  threshold: number = 0,\n  root: Window | Element | null | undefined = window,\n) {\n  if (!root) return 0\n  const vh =\n    (root instanceof Element ? root.clientHeight : root.innerHeight) || 0\n  const offset = threshold * bounds.height\n  const percentage =\n    (bounds.bottom - offset) / (vh + bounds.height - offset * 2)\n\n  return 1 - Math.max(0, Math.min(1, percentage))\n}\n\nexport function calculateHorizontalPercentage(\n  bounds: ClientRect,\n  threshold: number = 0,\n  root: Window | Element | null | undefined = window,\n) {\n  if (!root) return 0\n  const vw = (root instanceof Element ? root.clientWidth : root.innerWidth) || 0\n  const offset = threshold * bounds.width\n  const percentage = (bounds.right - offset) / (vw + bounds.width - offset * 2)\n\n  return 1 - Math.max(0, Math.min(1, percentage))\n}\n","import * as React from 'react'\nimport InView from 'react-intersection-observer'\nimport {\n  calculateHorizontalPercentage,\n  calculateVerticalPercentage,\n} from './utils'\nimport {\n  ScrollPercentagePlainChildrenProps,\n  ScrollPercentageProps,\n} from './index'\n\ntype State = {\n  percentage: number\n  inView: boolean\n  entry?: IntersectionObserverEntry\n}\n\ntype RenderProps = {\n  ref: React.RefObject<any> | ((node?: Element | null) => void)\n}\n\nfunction isPlainChildren(\n  props: ScrollPercentageProps | ScrollPercentagePlainChildrenProps,\n): props is ScrollPercentagePlainChildrenProps {\n  return typeof props.children !== 'function'\n}\n\n/**\n * Monitors scroll, and triggers the children function with updated props\n *\n <ScrollPercentage>\n {({ref, percentage}) => (\n   <h1 ref={ref}>{`${percentage}`}</h1>\n )}\n </ScrollPercentage>\n */\nexport class ScrollPercentage extends React.Component<\n  ScrollPercentageProps | ScrollPercentagePlainChildrenProps,\n  State\n> {\n  static displayName = 'ScrollPercentage'\n  static defaultProps = {\n    threshold: 0,\n  }\n\n  state: State = {\n    percentage: 0,\n    inView: false,\n    entry: undefined,\n  }\n\n  node?: Element | null = undefined\n  monitoring: boolean = false\n\n  componentDidUpdate(\n    prevProps: ScrollPercentageProps | ScrollPercentagePlainChildrenProps,\n    prevState: State,\n  ) {\n    if (\n      this.props.onChange &&\n      (prevState.percentage !== this.state.percentage ||\n        prevState.inView !== this.state.inView)\n    ) {\n      this.props.onChange(this.state.percentage, this.state.entry)\n    }\n\n    if (prevProps.root !== this.props.root) {\n      if (this.monitoring) {\n        this.monitorScroll(false, prevProps.root)\n        this.monitorScroll(this.state.inView)\n      }\n    }\n\n    if (prevState.inView !== this.state.inView) {\n      this.monitorScroll(this.state.inView, prevProps.root)\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.monitorScroll(false)\n  }\n\n  monitorScroll(enabled: boolean, target?: Element | Window | null) {\n    const root = target || this.props.root || window\n\n    if (enabled) {\n      if (this.monitoring) return\n      root.addEventListener('scroll', this.handleScroll, { passive: true })\n      root.addEventListener('resize', this.handleScroll)\n      this.handleScroll()\n      this.monitoring = true\n    } else {\n      if (!this.monitoring) return\n      root.removeEventListener('scroll', this.handleScroll)\n      root.removeEventListener('resize', this.handleScroll)\n      this.monitoring = false\n    }\n  }\n\n  handleScroll = () => {\n    if (!this.node) return\n    const bounds = this.node.getBoundingClientRect()\n    const percentage = this.props.horizontal\n      ? calculateHorizontalPercentage(\n          bounds,\n          this.props.threshold,\n          this.props.root,\n        )\n      : calculateVerticalPercentage(\n          bounds,\n          this.props.threshold,\n          this.props.root,\n        )\n    if (percentage !== this.state.percentage) {\n      this.setState({\n        percentage,\n      })\n    }\n  }\n\n  handleInView = (inView: boolean, entry: IntersectionObserverEntry) => {\n    this.node = entry.target\n    this.setState({ entry, inView })\n  }\n\n  handleRenderProps = ({ ref }: RenderProps) => {\n    const { percentage, entry, inView } = this.state\n    if (!isPlainChildren(this.props)) {\n      return this.props.children({\n        percentage,\n        entry,\n        inView,\n        ref,\n      })\n    }\n\n    return null\n  }\n\n  render() {\n    return (\n      <InView onChange={this.handleInView}>\n        {!isPlainChildren(this.props)\n          ? this.handleRenderProps\n          : this.props.children}\n      </InView>\n    )\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import { useEffect, useState } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { ScrollPercentageHookResponse, ScrollPercentageOptions } from './index'\nimport {\n  calculateVerticalPercentage,\n  calculateHorizontalPercentage,\n} from './utils'\n\n/**\n * Create a hook that reports the percentage an element is scrolled into the viewport.\n * @param options {ScrollPercentageOptions}\n */\nexport function useScrollPercentage(\n  options: ScrollPercentageOptions = {},\n): ScrollPercentageHookResponse {\n  const [ref, inView, entry] = useInView(options)\n  const [percentage, setPercentage] = useState(0)\n  const target = entry && entry.target\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (!target) return\n      const bounds = target.getBoundingClientRect()\n      const percentage = options.horizontal\n        ? calculateHorizontalPercentage(bounds, options.threshold, options.root)\n        : calculateVerticalPercentage(bounds, options.threshold, options.root)\n\n      setPercentage(percentage)\n    }\n\n    if (inView) {\n      const root = options.root || window\n      root.addEventListener('scroll', handleScroll, { passive: true })\n      root.addEventListener('resize', handleScroll)\n\n      return () => {\n        root.removeEventListener('scroll', handleScroll)\n        root.removeEventListener('resize', handleScroll)\n      }\n    }\n\n    // Trigger a scroll update, so we set the initial scroll percentage\n    handleScroll()\n    return\n  }, [inView, options.root, options.horizontal, options.threshold, target])\n\n  return [ref, percentage, entry]\n}\n"],"names":["_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","Object","setPrototypeOf","bind","__proto__","_typeof","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","_extends","assign","target","arguments","length","source","hasOwnProperty","apply","this","observerMap","Map","RootIds","WeakMap","rootId","optionsToId","options","keys","sort","filter","undefined","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","id","instance","thresholds","elements","observer","entries","forEach","entry","_elements$get","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","unobserve","size","disconnect","_excluded","isPlainChildren","props","children","InView","_React$Component","subClass","superClass","_this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","create","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","ref","_this$props2","as","excluded","sourceKeys","_objectWithoutPropertiesLoose","React.createElement","React.Component","calculateVerticalPercentage","vh","Element","clientHeight","innerHeight","offset","height","percentage","bottom","Math","max","min","calculateHorizontalPercentage","vw","clientWidth","innerWidth","width","right","displayName","defaultProps","ScrollPercentage","_len","args","_key","concat","horizontal","_ref","prevState","monitoring","monitorScroll","enabled","addEventListener","handleScroll","passive","removeEventListener","React","handleInView","handleRenderProps","_useInView","_temp","React.useRef","_React$useState","React.useState","setRef","React.useCallback","current","useEffect","result","useInView","_useState","useState","setPercentage"],"mappings":"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"}